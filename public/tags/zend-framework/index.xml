<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zend Framework on Prskavčí blog</title>
    <link>https://blog.prskavec.net/tags/zend-framework/</link>
    <description>Recent content in Zend Framework on Prskavčí blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cs-CZ</language>
    <lastBuildDate>Fri, 28 Jan 2011 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.prskavec.net/tags/zend-framework/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Zend Framework a NoSQL pro ukládání logů ve webových aplikací, díl druhý o MongoDb</title>
      <link>https://blog.prskavec.net/2011/01/28/zend-framework-a-nosql-pro-ukladani-logu-ve-webovych-aplikaci-druhy-dil-o-mongodb/</link>
      <pubDate>Fri, 28 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://blog.prskavec.net/2011/01/28/zend-framework-a-nosql-pro-ukladani-logu-ve-webovych-aplikaci-druhy-dil-o-mongodb/</guid>
      <description>Jak už jsem psal v minulém díle o CouchDb není žádný problém v použití dokumentových databází na logy. Výhodou je že se nemusíte starat o schema, což se u aplikace tohoto druhu opravdu hodí.
Pro napojení Zend Frameworku na logování do MongoDb musíte mít nainstalovanou MongoDb extenzi do PHP. Bez ní se bohužel neobejdete. Log writer si vytvoříte snadno pomocí extenze Zend_Log_Writer_Abstract a provedete drobné úpravy pro práci s MongoDb jak obsahuje ukázka.</description>
    </item>
    
    <item>
      <title>Zend Framework a NoSQL pro ukládání logů ve webových aplikací, díl prvnío CouchDb</title>
      <link>https://blog.prskavec.net/2010/08/24/zend-framework-a-nosql-pro-ukladani-logu-ve-webovych-aplikaci-dil-1-couchdb/</link>
      <pubDate>Tue, 24 Aug 2010 00:00:00 +0000</pubDate>
      
      <guid>https://blog.prskavec.net/2010/08/24/zend-framework-a-nosql-pro-ukladani-logu-ve-webovych-aplikaci-dil-1-couchdb/</guid>
      <description>Použití databáze pro ukládání logů se používá často pro analýzu logů. Technicky napojit databázi RBMS (MySQL) pomocí Zend_Log_Writer_Db není žádný problém. Ale vidím tu nevýhodu v tom, že musíte mít schema podle toho co ukládáte za logy. Pokud se rozhodnete použít NOSQL databázi (CouchDb, MongoDb) nemusíte se o schema starat.
V tomto článku si napsat vlastní Zend_Log_Writer pro CouchDb a jak si potom lehce zobrazíme příslušné logy. Napíšeme si také jednoduchou map funkci pro view v CouchDb, kterou v aplikaci použijeme.</description>
    </item>
    
    <item>
      <title>Zend_Rest_Route a  Zend_Rest_Controller v ZF 1.9</title>
      <link>https://blog.prskavec.net/2009/09/01/zend_rest_route-a-zend_rest_controller-v-zf-1-9/</link>
      <pubDate>Tue, 01 Sep 2009 00:00:00 +0000</pubDate>
      
      <guid>https://blog.prskavec.net/2009/09/01/zend_rest_route-a-zend_rest_controller-v-zf-1-9/</guid>
      <description>Proč REST a co to obnáší? V Zend Frameworku 1.9 byla přidána pro používání REST v url a v controlleru.
REST je v módě a proto nám ho přidali i do ZF. Ne vážně samozřejmě každý teď dělá do REST. Implementace RESTu existuje v každém větším frameworku. V ZF už delší dobu je REST klient i server. Klienta můžete využít pro práci s mnohými službami na internetu (twitter, flickr, &amp;hellip;).</description>
    </item>
    
    <item>
      <title>Jak na výpadek služby Twitter při použití Zend_Service_Twitter</title>
      <link>https://blog.prskavec.net/2009/08/06/jak-na-vypadek-sluzby-twitter-pri-pouziti-zend-service-twitter/</link>
      <pubDate>Thu, 06 Aug 2009 00:00:00 +0000</pubDate>
      
      <guid>https://blog.prskavec.net/2009/08/06/jak-na-vypadek-sluzby-twitter-pri-pouziti-zend-service-twitter/</guid>
      <description>Během dneška (6.8.2009) byl výpadek služby Twitter a koukal jsem, že mi to položilo php-frameworks.net na kolena.
Jak jsem se zjišťovat co s tím a proč mi to hlásí:  Zend_Http_Client_Adapter_Exception: Unable to Connect to tcp://twitter.com:80. Error #110: Connection timed out in /srv/lib/php/Zend/Http/Client/Adapter/Socket.php on line 213 
Tento kód nějak selhal a výpadek nastal dříve, asi to vypadá na nějakou chybu v Zendu, protože se Zend_Service_Twitter_Exception nevrátí i při výpadku spojení jak jsem očekával.</description>
    </item>
    
    <item>
      <title>Zend Server CE a vlastni logy v konzoli</title>
      <link>https://blog.prskavec.net/2009/05/05/zend-server-ce-a-vlastni-logy-v-konzoli/</link>
      <pubDate>Tue, 05 May 2009 00:00:00 +0000</pubDate>
      
      <guid>https://blog.prskavec.net/2009/05/05/zend-server-ce-a-vlastni-logy-v-konzoli/</guid>
      <description>Zend Server 4.0.2  Zend aktualizoval Zend Server na verzi 4.0.2, přidána hlavně podpora pro ZF 1.8 a další drobné změny. Jen mi z repozitory pro Ubuntu nefunguje Zend_Tool, doufám, že tuto drobnost brzo opraví zatím ji stejně s Zend Studiem moc nevyužiji. Update 6.5.2009 po mém upozornění dnes Zend provedl update ZF 1.8 v repozitory pro Zend Server CE a už to funguje, soubor najdete v /usr/local/zend/share/ZendFramework/bin/zf.sh. Doporučuji si udělat symlink nebo přidat adresář do $PATH.</description>
    </item>
    
    <item>
      <title>Zend Framework 1.6 a ajax pomocí jQuery</title>
      <link>https://blog.prskavec.net/2008/09/23/zend-framework-16-a-ajax-pomoc-jquery/</link>
      <pubDate>Tue, 23 Sep 2008 00:00:00 +0000</pubDate>
      
      <guid>https://blog.prskavec.net/2008/09/23/zend-framework-16-a-ajax-pomoc-jquery/</guid>
      <description>Jak jsem psal v Zend Framework 1.6 a moje zkušenosti s Dojo TabContainer, nakonec jsem použil jQuery. Ve formuláři se dají měnit některá data, které jsou závislá na dalších, které automaticky předvyplňuji a na to jsem použil při změnách ajax. Docela mě potěšilo jak jednoduše a pěkně se to dá udělat pomocí jQuery. &amp;lt;script&amp;gt; $(document).ready(function(){ $(&amp;ldquo;#example &amp;gt; ul&amp;rdquo;).tabs(); $(&amp;lsquo;#page1-deadline_vyzva&amp;rsquo;).datepicker(); $(&amp;lsquo;#page3-datum_zahajeni&amp;rsquo;).datepicker(); $(&amp;lsquo;#page3-datum_ukonceni&amp;rsquo;).datepicker();
 $(&#39;#page1-editor&#39;).change(function(){ $.ajax({ type: &amp;quot;POST&amp;quot;, url: &amp;quot;&amp;amp;lt;?php echo $this-&amp;amp;gt;baseUrl();?&amp;amp;gt;/user/info/idcvut/&amp;quot; + $(this).</description>
    </item>
    
    <item>
      <title>Zend Framework 1.6 a moje zkušenosti s Dojo TabContainer</title>
      <link>https://blog.prskavec.net/2008/09/11/zend-framework-16-a-moje-zkuenosti-s-dojo-tabcontainer/</link>
      <pubDate>Thu, 11 Sep 2008 00:00:00 +0000</pubDate>
      
      <guid>https://blog.prskavec.net/2008/09/11/zend-framework-16-a-moje-zkuenosti-s-dojo-tabcontainer/</guid>
      <description>Zrovna dělám na jednom malém projektu, který jsem hned začal psát zrovna jak vyšel ZF 1.6, celkem standardní věci až na to, že jsem potřeboval rozdělit formulář na více stránek a udělat záložky.
Postupoval jsem podle manulálu, vyvořil jsem si formulář se subformy a celkem to dobře funguje. Potom když jsem potřeboval rozbrazit záložky narazil jsem na několik problémů se kterými jsem si různě poradil.
Takto vypadají záložky pomocí Dojo frameworku.</description>
    </item>
    
    <item>
      <title>Gettext a PHP</title>
      <link>https://blog.prskavec.net/2008/07/15/gettext-a-php/</link>
      <pubDate>Tue, 15 Jul 2008 00:00:00 +0000</pubDate>
      
      <guid>https://blog.prskavec.net/2008/07/15/gettext-a-php/</guid>
      <description>Gettext je Open Source nástroj na překlad aplikací. Kdo s tímto nástrojem pracuje může můj článek rovnou vynechat, protože tyto věci zná.
Getext má jedinou nevýhodu, kterou lze celkem přejít, nejde přímo lidsky číst, ukládájí se v binárním tvaru do souboru s příponou *.mo. Pokud používáte nějakou vlastní metodu pro překlad určitě to bude něco z toho co nabízí Zend Framework (ZF) v Zend_Translate (pole, csv, xml – tbx, xliff, xmltm, gettext) nebo nějakou metodu založenou na databázi.</description>
    </item>
    
    <item>
      <title>Zkušenosti s Zend_Auth_Adapter_Ldap</title>
      <link>https://blog.prskavec.net/2008/05/05/zkuenosti-s-zend_auth_adapter_ldap/</link>
      <pubDate>Mon, 05 May 2008 00:00:00 +0000</pubDate>
      
      <guid>https://blog.prskavec.net/2008/05/05/zkuenosti-s-zend_auth_adapter_ldap/</guid>
      <description>V nové verzi Zend Framework 1.5 byla do Zend_Auth přidána podpora pro LDAP. Protože u mě v práci se bez toho neobejde ani ta nejjednoduší aplikace, zkusil jsem ho a seznámím vás s problémy na které jsem narazil a jak jsem je obešel.
Nejprve standarní řešení přes Ldap modul v PHP. Něco o našem LDAPu, používáme port 1636 a pro bind vlastní DN, které kopíruje naší strukturu. Pro bind nepotřebuje aplikace žádného vlastního uživatele použije se jméno a heslo toho kdo se hlásí.</description>
    </item>
    
  </channel>
</rss>