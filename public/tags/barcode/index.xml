<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Barcode on Prskavčí blog</title>
    <link>https://blog.prskavec.net/tags/barcode/</link>
    <description>Recent content in Barcode on Prskavčí blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cs-CZ</language>
    <lastBuildDate>Mon, 05 Nov 2007 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.prskavec.net/tags/barcode/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Tvorba čárového kódu v PHP</title>
      <link>https://blog.prskavec.net/2007/11/05/tvorba-caroveho-kodu-v-php/</link>
      <pubDate>Mon, 05 Nov 2007 00:00:00 +0000</pubDate>
      
      <guid>https://blog.prskavec.net/2007/11/05/tvorba-caroveho-kodu-v-php/</guid>
      <description>Nedávno jsem tvořil apliakci, která obsahuje čárový kód. Doposud jsem neměl s tím co dočinění, ale získal jsem cenné zkušenosti, které se mohou hodit i vám.
Čárový kód (barcode) má různé normy. Já jsem musel podle naší aplikace použít Code 128B. Je několik možností jak danou problematiku řešit.  máte font, který umí přímo psát v daném čárovém kódu budete generovat obrázek pomocí nějaké aplikace (tuto variantu jsem zvolil já) pokud generujete PDF, můžete použít XSL-FO a generovat kód přímo v něm  Vzhledem k problémům s nákupem fontu a časové tísni jsem zvolil variantu 2.</description>
    </item>
    
  </channel>
</rss>