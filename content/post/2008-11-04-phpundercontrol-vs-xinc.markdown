---
date: 2008-11-04T00:00:00Z
meta:
  _encloseme: "1"
  _pingme: "1"
published: true
status: publish
tags:
- continuous integration
- php
title: phpUnderControl vs Xinc
type: post
url: /2008/11/04/phpundercontrol-vs-xinc/
---

<p>Nedávno jsem se snažil trochu vylepšit vývoj o některé aspekty, které mají spíše formálnější charakter. Celý vývojový proces jsem načrtl na následujícím obrázku.</p>  <p><a href="http://blog.prskavec.net/wp-content/uploads/2008/11/development.png"><font color="#ffffff"></font><img style="border-right: 0px;border-top: 0px;float: none;margin-left: auto;border-left: 0px;margin-right: auto;border-bottom: 0px" height="493" alt="Development" src="http://blog.prskavec.net/wp-content/uploads/2008/11/development-thumb.png" width="635" border="0" /></a> Vývojář PHP má výhodu libovolného IDE (preferuji Eclipse PDT). Pro zdrojové kódy používám jako SCM Subversion. Nedávno jsem přidal pre-commit hook skript na kontrolu syntaxe. Používám ho hlavně pro kontrolu projektů v Zend Frameworku. PHP_CodeSniffer podporuje <a href="http://checkstyle.sourceforge.net/">Checkstyle</a> tak není problém výstup zaintegrovat i do jiných programů. Jako post-commit skript používám generován XML logů, které používá stránka s náhledy na projekty na kterých pracuji.</p>  <p>Protože jsem si oblíbil <a href="http://blog.prskavec.net/?p=142">Phing</a> pro automatizaci tvroby buildu hledal jsem něco co by to celé zastřešilo. Řešení je <a href="http://en.wikipedia.org/wiki/Continuous_integration">Continuous integration</a> a pro php jsou použitelné jen dva projekty a to <a href="http://www.phpundercontrol.org">phpUnderControl</a> a <a href="http://code.google.com/p/xinc/">Xinc</a>. Oba umí stejné nebo podobné věci a přece jenom se trochu liší jak vznikli a jak se provozují.</p>  <p>Jako první jsem zkoušel phpUnderControl. Ten je založený jako plugin do <a href="http://cruisecontrol.sourceforge.net/">Cruisecontrolu</a>, který je napsaný v Jave a běží jako vlastní webový server, který používá <a href="http://ant.apache.org/">Ant</a> a může volat víceméně přes něj cokoliv si zamanete. V phpUnderControl je integrována podpora pro PHPUnit (<a href="http://www.phpunit.de/pocket_guide/3.2/en/code-coverage-analysis.html">Code Coverage</a>, Project Mess Detection and Software Metrics), PHPDocumentor a PHP_CodeSniffer. Pro zobrazení dat je připravena sada XSL stylesheetů pro Cruisecontrol, tak jsou vidět <a href="http://www.phpundercontrol.org/images/0.3.5-metrics.png">pěkné grafy</a>.</p>  <p>Jedinou nevýhodu vidím v tom, že je to odělený systém běžící na Javě, ale to může být pro někoho klidně i výhoda.</p>  <p>Další CI server jsem vyzkoušel Xinc, ten má výhodu, že je napsaný v PHP a stačí mu Apache a skript který slouží jako CRON pro buildy. Místo Antu je použitý Phing a má ještě navíc podporu pro XDebug, který také umí Code Coverage Analysis a Profiling.</p>  <p>Xinc má vzhled založený na knihovně <a href="http://ezcomponents.org/">eZ Components</a>, používá <a href="http://ezcomponents.org/docs/tutorials/Base">Base</a> a <a href="http://ezcomponents.org/docs/tutorials/Graph">Graph</a>. Chybí mi v defaultních templates lepší podpora pro zobrazování výsledků z PHPDocumentor, PHP_CodeSniffer jak to má udělené phpUnderControl. Jak je vidět např. v <a href="http://www.xinc.eu/#xinc">demu</a>, tak pokud se podívate na jednotlivý projekt je to jen log a odkazy, není to příliš elegantní a nejsou to jednotlivé html stránky na které lze odkazovat. Vývoj ale intenzivně pokračuje a uvidíme jakých vylepšení se dočkáme ve verzi 2.1. Výhody Xincu také vidím ve psaní pluginů přímo v php.</p>  <p>Zajímalo by mě jak to funguje jinde a případně, které řešení používate a proč.</p>
